C51 COMPILER V9.52.0.0   MAIN                                                              09/04/2023 20:53:32 PAGE 1   


C51 COMPILER V9.52.0.0, COMPILATION OF MODULE MAIN
OBJECT MODULE PLACED IN main.OBJ
COMPILER INVOKED BY: D:\Program Files (x86)\keilc51\C51\BIN\C51.EXE main.c BROWSE DEBUG OBJECTEXTEND TABS(2)

line level    source

   1          #include "reg52.h"
   2          #include <intrins.h>
   3          #include <string.h>
   4          
   5          #define dataBuffer P0;
   6          
   7          sbit led = P3^7;
   8          sbit SDA = P0^3;
   9          sbit SCL = P0^1;
  10          
  11          void iic_start() {
  12   1        SDA = 1;
  13   1        SCL = 1;
  14   1        _nop_();
  15   1        SDA = 0;
  16   1        _nop_();
  17   1      }
  18          
  19          void iic_stop() {
  20   1        SDA = 0;
  21   1        SCL = 1;
  22   1        _nop_();
  23   1        SDA = 1;
  24   1        _nop_();
  25   1      }
  26          
  27          char iic_ack() {
  28   1        char flag;
  29   1        SDA = 1;
  30   1        _nop_();
  31   1        SCL = 1;
  32   1        flag = SDA;
  33   1        _nop_();
  34   1        SCL = 0;
  35   1        _nop_();
  36   1        return flag;
  37   1      }
  38          
  39          
  40          void iic_send_byte(char sendData) {
  41   1        int i;
  42   1        int temp = sendData;
  43   1        for(i = 0; i < 8; i ++) {
  44   2          SCL = 0;
  45   2          SDA = temp & 0x80;
  46   2          _nop_();
  47   2          SCL = 1;
  48   2          _nop_();
  49   2          // 这个忘拉低了
  50   2          SCL = 0;
  51   2          _nop_();
  52   2          temp <<= 1;
  53   2        }
  54   1      }
  55          
C51 COMPILER V9.52.0.0   MAIN                                                              09/04/2023 20:53:32 PAGE 2   

  56          void iic_write_cmd(char cmd) {
  57   1        iic_start();
  58   1        iic_send_byte(0x78);
  59   1        iic_ack();
  60   1        iic_send_byte(0x00);
  61   1        iic_ack();
  62   1        iic_send_byte(cmd);
  63   1        iic_ack();
  64   1        iic_stop();
  65   1      }
  66          
  67          void iic_write_data(char d) {
  68   1        iic_start();
  69   1        iic_send_byte(0x78);
  70   1        iic_ack();
  71   1        iic_send_byte(0x40);
  72   1        iic_ack();
  73   1        iic_send_byte(d);
  74   1        iic_ack();
  75   1        iic_stop();
  76   1      }
  77          
  78          void oled_clear() {
  79   1        int i, j;
  80   1        for(i = 0; i < 8; i ++) {
  81   2          iic_write_cmd(0xB0+i);
  82   2          iic_write_cmd(0x00);
  83   2          iic_write_cmd(0x10);
  84   2          for(j = 0; j < 128; j ++) {
  85   3            iic_write_data(0);
  86   3          }
  87   2        }
  88   1      }
  89          
  90          void iic_init() {
  91   1      
  92   1      }
  93          
  94          void Oled_Init(void){
  95   1        iic_write_cmd(0xAE);//--display off
  96   1        iic_write_cmd(0x00);//---set low column address
  97   1        iic_write_cmd(0x10);//---set high column address
  98   1        iic_write_cmd(0x40);//--set start line address  
  99   1        iic_write_cmd(0xB0);//--set page address
 100   1        iic_write_cmd(0x81); // contract control
 101   1        iic_write_cmd(0xFF);//--128   
 102   1        iic_write_cmd(0xA1);//set segment remap 
 103   1        iic_write_cmd(0xA6);//--normal / reverse
 104   1        iic_write_cmd(0xA8);//--set multiplex ratio(1 to 64)
 105   1        iic_write_cmd(0x3F);//--1/32 duty
 106   1        iic_write_cmd(0xC8);//Com scan direction
 107   1        iic_write_cmd(0xD3);//-set display offset
 108   1        iic_write_cmd(0x00);//
 109   1        
 110   1        iic_write_cmd(0xD5);//set osc division
 111   1        iic_write_cmd(0x80);//
 112   1        
 113   1        iic_write_cmd(0xD8);//set area color mode off
 114   1        iic_write_cmd(0x05);//
 115   1        
 116   1        iic_write_cmd(0xD9);//Set Pre-Charge Period
 117   1        iic_write_cmd(0xF1);//
C51 COMPILER V9.52.0.0   MAIN                                                              09/04/2023 20:53:32 PAGE 3   

 118   1        
 119   1        iic_write_cmd(0xDA);//set com pin configuartion
 120   1        iic_write_cmd(0x12);//
 121   1        
 122   1        iic_write_cmd(0xDB);//set Vcomh
 123   1        iic_write_cmd(0x30);//
 124   1        
 125   1        iic_write_cmd(0x8D);//set charge pump enable
 126   1        iic_write_cmd(0x14);//
 127   1        
 128   1        iic_write_cmd(0xAF);//--turn on oled panel    
 129   1      }
 130          
 131          
 132          void main() {
 133   1        Oled_Init();
 134   1        
 135   1        iic_write_cmd(0x20);
 136   1        iic_write_cmd(0x02);
 137   1      
 138   1        oled_clear();
 139   1      
 140   1        
 141   1        iic_write_cmd(0xB0);
 142   1        iic_write_cmd(0x00);
 143   1        iic_write_cmd(0x10);
 144   1        iic_write_data(0xff);
 145   1        iic_write_data(0xff);
 146   1        iic_write_data(0xff);
 147   1        iic_write_data(0xff);
 148   1        iic_write_data(0xff);
 149   1        
 150   1        iic_write_cmd(0xB5);
 151   1        iic_write_cmd(0x00);
 152   1        iic_write_cmd(0x10);
 153   1        iic_write_data(0x08);
 154   1        iic_write_data(0x08);
 155   1        iic_write_data(0x08);
 156   1        iic_write_data(0x08);
 157   1        iic_write_data(0x08);
 158   1      
 159   1        while(1);
 160   1      }


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    377    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =   ----       2
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
